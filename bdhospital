CREATE DATABASE hospital;

 
 

 
USE hospital;

 
 

 
CREATE TABLE paciente(

 
idPaciente serial PRIMARY KEY NOT NULL,

 
nome VARCHAR(100) NOT NULL,

 
sexo VARCHAR(1),

 
obito BOOLEAN,

 
insertedAt TIMESTAMP NOT NULL DEFAULT NOW()

 
);

 
 

 
CREATE TABLE medico(

 
idMedico serial PRIMARY KEY NOT NULL,

 
nome VARCHAR(100)

 
);

 
 

 
CREATE TABLE especialidade(

 
idEspecialidade serial PRIMARY KEY NOT NULL,

 
nome VARCHAR(100)

 
);

 
 

 
CREATE TABLE consulta(

 
idConsulta serial PRIMARY KEY NOT NULL,

 
idEspecialidade INT NOT NULL REFERENCES especialidade(idEspecialidade),

 
idPaciente INT NOT NULL REFERENCES paciente(idPaciente),

 
idMedico INT NOT NULL REFERENCES medico(idMedico),

 
last_user_updated varchar(100),

 
last_time_updated timestamp

 
);

 
 

 
CREATE TABLE obitos(

 
id serial PRIMARY KEY NOT NULL,

 
obs text

 
);

 
 

 
CREATE OR REPLACE FUNCTION trgValidaDadosConsulta()

 
RETURNS trigger AS $trgValidaDadosConsulta$

 
 

 
DECLARE

 
linhadopacinserido record;

 
espec_row record;

 
 

 
--counter integer := 1;

 
BEGIN

 
SELECT

 
INTO linhadopacinserido *

 
FROM

 
pacientes as p

 
where

 
p.id = NEW.pac_id;

 
 

 
SELECT

 
INTO espec_row *

 
FROM

 
especialidades as esp

 
where

 
esp.id = NEW.especialidade_id;

 
 

 
IF linhadopacinserido.sexo = 'm'

 
AND espec_row.nome = 'ginecologista' THEN RAISE EXCEPTION 'Ginecologista apenas para pacientes do sexo feminino';

 
 

 
ELSEIF linhadopacinserido.sexo = 'f'

 
AND espec_row.nome = 'urologista' THEN RAISE EXCEPTION 'Urologista apenas para pacientes do sexo masculino';

 
 

 
END IF;

 
 

 
RETURN NEW;

 
 

 
END;

 
 

 
$ trgValidaDadosConsulta $ LANGUAGE plpgsql;

 
 

 
CREATE TRIGGER ValidaDadosConsulta BEFORE

 
INSERT

 
OR

 
UPDATE

 
ON consultas FOR EACH ROW --FOR EACH STATEMENT

 
EXECUTE PROCEDURE trgValidaDadosConsulta();
